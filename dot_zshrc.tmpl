setopt no_share_history

fpath=(/usr/local/share/zsh-completions $fpath)

# Auto switch to correct node version... If nvm installed!
if command -v nvm >/dev/null 2>&1
then
  # place this after nvm initialization!
  autoload -U add-zsh-hook
  load-nvmrc() {
    local node_version="$(nvm version)"
    local nvmrc_path="$(nvm_find_nvmrc)"

    if [ -n "$nvmrc_path" ]; then
      local nvmrc_node_version=$(nvm version "$(cat "${nvmrc_path}")")

      if [ "$nvmrc_node_version" = "N/A" ]; then
        nvm install
      elif [ "$nvmrc_node_version" != "$node_version" ]; then
        nvm use
      fi
    elif [ "$node_version" != "$(nvm version default)" ]; then
      echo "Reverting to nvm default version"
      nvm use default
    fi
  }
  add-zsh-hook chpwd load-nvmrc
  load-nvmrc
fi

command -v corepack >/dev/null 2>&1 && corepack enable

export GPG_TTY=$TTY

alias git-sha-copy='git rev-parse HEAD | pbcopy'

function wport() {
  lsof -n -i :$1 | grep LISTEN
}

{{ if (eq .chezmoi.os "darwin") -}}
export PATH="${PATH}:/Applications/Visual Studio Code.app/Contents/Resources/app/bin"
hash -d ortoo={{ .chezmoi.homeDir }}/Development/ortoo
hash -d thekey={{ .chezmoi.homeDir }}/Development/thekey
hash -d robin={{ .chezmoi.homeDir }}/Development/robin
export PATH="{{ .chezmoi.homeDir }}/Development/ortoo/bin:${PATH}"
export GOPATH="{{ .chezmoi.homeDir }}/Development/go"
export PATH="$PATH:${GOPATH}/bin:${GOROOT}/bin"
export PATH="$PATH:{{ .chezmoi.homeDir }}/Development/thekey/keyflow/bin"

if [ -S ~/Library/Group\ Containers/2BUA8C4S2C.com.1password/t/agent.sock ]; then export SSH_AUTH_SOCK=~/Library/Group\ Containers/2BUA8C4S2C.com.1password/t/agent.sock; fi
{{ end -}}

# The next line updates PATH for the Google Cloud SDK.
if [ -f '{{ .chezmoi.homeDir }}/google-cloud-sdk/path.zsh.inc' ]; then source '{{ .chezmoi.homeDir }}/google-cloud-sdk/path.zsh.inc'; fi
# The next line enables shell command completion for gcloud.
if [ -f '{{ .chezmoi.homeDir }}/google-cloud-sdk/completion.zsh.inc' ]; then source '{{ .chezmoi.homeDir }}/google-cloud-sdk/completion.zsh.inc'; fi

eval "$(starship init zsh)"